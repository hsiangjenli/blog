{"type":"getPostById","data":{"title":"[tutorial] How to use psutil to monitor CPU and memory usage in python","date":"2024-01-25T16:00:00.000Z","description":"<h1>üìå Introduction</h1>\n<p>This article introduces psutil, an open-source Python package that provides system information about CPU, memory, disks, and networks. It covers the installation of psutil and demonstrates useful functions for monitoring CPU and memory usage, as well as how to integrate it into Python code using decorators.</p>","categories":[],"tags":[{"name":"python","_id":"cmh85h8an001sn33v96f1azgl"}],"content":"<h1>üìå Introduction</h1>\n<p>This article introduces psutil, an open-source Python package that provides system information about CPU, memory, disks, and networks. It covers the installation of psutil and demonstrates useful functions for monitoring CPU and memory usage, as well as how to integrate it into Python code using decorators.</p>\n<span id=\"more\"></span>\n<h1>üöÄ Quick Start</h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install psutil</span><br></pre></td></tr></table></figure>\n<h2 id=\"Useful-functions-in-psutil\">Useful functions in psutil</h2>\n<h3 id=\"CPU\">CPU</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psutil.cpu_count() <span class=\"comment\"># get the number of CPU</span></span><br><span class=\"line\">psutil.cpu_percent() <span class=\"comment\"># get the usage of all CPU</span></span><br><span class=\"line\">psutil.cpu_percent(percpu=<span class=\"literal\">True</span>) <span class=\"comment\"># get the usage of per CPU</span></span><br><span class=\"line\">psutil.cpu_percent(interval=<span class=\"number\">1</span>) <span class=\"comment\"># get the usage of all CPU in 1 second, using interval will get more robust result</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Memory\">Memory</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info = psutil.virtual_memory()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># total memory</span></span><br><span class=\"line\">info.total / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the usage of memory</span></span><br><span class=\"line\">info.percent</span><br></pre></td></tr></table></figure>\n<h4 id=\"MacOS\">MacOS</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># svmem(total=25769803776, available=7726628864, percent=70.0, used=9045114880, free=791134208, active=6949453824, inactive=6915768320, wired=2095661056)</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\">Ubuntu</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># will get more information like buffers, cached etc..</span></span><br><span class=\"line\"><span class=\"comment\"># svmem(total=33541988352, available=25899790336, percent=22.8, used=7087771648, free=2703233024, active=15287881728, inactive=14264188928, buffers=965103616, cached=22785880064, shared=8265728, slab=904495104)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"How-to-integrate-psutil-into-our-code\">How to integrate psutil into our code?</h2>\n<p>We can use psutil to monitor each function cpu and memory usage by using decorator.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> psutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">monitor</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        process = psutil.Process()</span><br><span class=\"line\">        cur_func_pid = process.pid</span><br><span class=\"line\">        process = psutil.Process(cur_func_pid)</span><br><span class=\"line\"></span><br><span class=\"line\">        func(*args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">        cpu_usage = process.cpu_percent(interval=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">        memory_usage = process.memory_info().rss / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;CPU usage: <span class=\"subst\">&#123;cpu_usage&#125;</span>%&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Memory usage: <span class=\"subst\">&#123;memory_usage&#125;</span>GB&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br></pre></td></tr></table></figure>\n<h3 id=\"Example\">Example</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@monitor</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">example_code</span>():</span><br><span class=\"line\">    <span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        np.random.rand(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">example_code()</span><br></pre></td></tr></table></figure>\n<h1>üîÅ Recap</h1>\n<ul>\n<li>psutil is an open-source Python package for system monitoring.</li>\n<li>It provides useful functions to get CPU and memory usage information.</li>\n<li>You can use decorators to monitor CPU and memory usage of Python functions easily.</li>\n</ul>\n<h1>üîó References</h1>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/380842937\">PythonÂ∏∏Áî®Â∫ì‰πãpsutil‰ΩøÁî®ÊåáÂçó</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43391414/article/details/124431187\">ÁÆÄÂçï‰ªãÁªçpsutilÂ∫ìÔºàvirtual_memory()„ÄÅcpu_percent()</a></li>\n<li><a href=\"https://www.askpython.com/python-modules/psutil-module\">Python System Monitoring and Profiling with the psutil Module</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/psutil-module-in-python/\">Psutil module in Python</a></li>\n<li><a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/2/mlpug/administrative-tasks-oracle-machine-learning-python1.html#GUID-0A8BF865-13EA-4A20-BAA9-7066066C45CB\">Administrative Tasks for Oracle Machine Learning for Python</a></li>\n</ul>\n","_path":"tutorial_psutil/","_link":"https://hsiangjenli.github.io/blog/tutorial_psutil/","_id":"cmh85h8b4003mn33v9aa85pn3"}}