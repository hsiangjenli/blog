{"type":"getPostById","data":{"title":"[教學] 如何使用 psutil 在 Python 中監控 CPU 與記憶體使用率","date":"2024-01-25T16:00:00.000Z","description":"<blockquote>\n<p>註記：此頁為由 AI（gpt-5-mini-2025-08-07）自動翻譯自英文原文，可能含有少量不準確之處。</p>\n</blockquote>\n<h1>📌 介紹</h1>\n<p>這篇文章介紹 psutil，一個開源的 Python 套件，可提供有關 CPU、記憶體、磁碟與網路的系統資訊。內容涵蓋 psutil 的安裝，並示範用於監控 CPU 與記憶體使用率的實用函式，以及如何使用裝飾器將其整合到 Python 程式碼中。</p>","categories":[],"tags":[{"name":"python","_id":"cmg8fhkzu001onk3i91jufc4s"}],"content":"<blockquote>\n<p>註記：此頁為由 AI（gpt-5-mini-2025-08-07）自動翻譯自英文原文，可能含有少量不準確之處。</p>\n</blockquote>\n<h1>📌 介紹</h1>\n<p>這篇文章介紹 psutil，一個開源的 Python 套件，可提供有關 CPU、記憶體、磁碟與網路的系統資訊。內容涵蓋 psutil 的安裝，並示範用於監控 CPU 與記憶體使用率的實用函式，以及如何使用裝飾器將其整合到 Python 程式碼中。</p>\n<span id=\"more\"></span>\n<h1>🚀 快速開始</h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install psutil</span><br></pre></td></tr></table></figure>\n<h2 id=\"psutil-中的實用函式\">psutil 中的實用函式</h2>\n<h3 id=\"CPU\">CPU</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psutil.cpu_count() <span class=\"comment\"># 取得 CPU 數量</span></span><br><span class=\"line\">psutil.cpu_percent() <span class=\"comment\"># 取得所有 CPU 的使用率</span></span><br><span class=\"line\">psutil.cpu_percent(percpu=<span class=\"literal\">True</span>) <span class=\"comment\"># 取得每顆 CPU 的使用率</span></span><br><span class=\"line\">psutil.cpu_percent(interval=<span class=\"number\">1</span>) <span class=\"comment\"># 在 1 秒內取得所有 CPU 的使用率，使用 interval 可得到較穩定的結果</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"記憶體\">記憶體</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info = psutil.virtual_memory()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 總記憶體</span></span><br><span class=\"line\">info.total / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 記憶體使用率</span></span><br><span class=\"line\">info.percent</span><br></pre></td></tr></table></figure>\n<h4 id=\"MacOS\">MacOS</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># svmem(total=25769803776, available=7726628864, percent=70.0, used=9045114880, free=791134208, active=6949453824, inactive=6915768320, wired=2095661056)</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\">Ubuntu</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 會取得更多資訊，例如 buffers、cached 等等..</span></span><br><span class=\"line\"><span class=\"comment\"># svmem(total=33541988352, available=25899790336, percent=22.8, used=7087771648, free=2703233024, active=15287881728, inactive=14264188928, buffers=965103616, cached=22785880064, shared=8265728, slab=904495104)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"如何將-psutil-整合到我們的程式？\">如何將 psutil 整合到我們的程式？</h2>\n<p>我們可以使用裝飾器來監控每個函式的 CPU 與記憶體使用情況。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> psutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">monitor</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        process = psutil.Process()</span><br><span class=\"line\">        cur_func_pid = process.pid</span><br><span class=\"line\">        process = psutil.Process(cur_func_pid)</span><br><span class=\"line\"></span><br><span class=\"line\">        func(*args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">        cpu_usage = process.cpu_percent(interval=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">        memory_usage = process.memory_info().rss / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;CPU usage: <span class=\"subst\">&#123;cpu_usage&#125;</span>%&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Memory usage: <span class=\"subst\">&#123;memory_usage&#125;</span>GB&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br></pre></td></tr></table></figure>\n<h3 id=\"範例\">範例</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@monitor</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">example_code</span>():</span><br><span class=\"line\">    <span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        np.random.rand(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">example_code()</span><br></pre></td></tr></table></figure>\n<h1>🔁 小結</h1>\n<ul>\n<li>psutil 是一個用於系統監控的開源 Python 套件。</li>\n<li>它提供取得 CPU 與記憶體使用資訊的實用函式。</li>\n<li>你可以使用裝飾器輕鬆地監控 Python 函式的 CPU 與記憶體使用情況。</li>\n</ul>\n<h1>🔗 參考資料</h1>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/380842937\">Python常用库之psutil使用指南</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43391414/article/details/124431187\">简单介绍psutil库（virtual_memory()、cpu_percent()</a></li>\n<li><a href=\"https://www.askpython.com/python-modules/psutil-module\">使用 psutil 模組進行 Python 系統監控與分析</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/psutil-module-in-python/\">Python 的 Psutil 模組</a></li>\n<li><a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/2/mlpug/administrative-tasks-oracle-machine-learning-python1.html#GUID-0A8BF865-13EA-4A20-BAA9-7066066C45CB\">Oracle Machine Learning for Python 的管理工作</a></li>\n</ul>\n","_path":"tutorial-how-to-use-psutil-to-monitor-cpu-and-memory-usage-in-python.zh-TW/","_link":"https://hsiangjenli.github.io/blog/tutorial-how-to-use-psutil-to-monitor-cpu-and-memory-usage-in-python.zh-TW/","_id":"cmg8fhl05002wnk3i2pfdcx0d"}}