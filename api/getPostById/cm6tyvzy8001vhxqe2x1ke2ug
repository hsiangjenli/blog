{"type":"getPostById","data":{"title":"[tutorial] How to use psutil to monitor CPU and memory usage in python","date":"2024-01-26T00:00:00.000Z","description":"<h2 id=\"What-is-psutil\"><a href=\"#What-is-psutil\" class=\"headerlink\" title=\"What is psutil?\"></a>What is psutil?</h2><p><em><strong>psutil</strong></em> is an open source package for python, which can help us to get the information of the system (CPU, memory, disks, network etc..).</p>","categories":[],"tags":[{"name":"python","_id":"cm6tyvzxm000hhxqe96qx82r4"}],"content":"<h2 id=\"What-is-psutil\"><a href=\"#What-is-psutil\" class=\"headerlink\" title=\"What is psutil?\"></a>What is psutil?</h2><p><em><strong>psutil</strong></em> is an open source package for python, which can help us to get the information of the system (CPU, memory, disks, network etc..).</p>\n<span id=\"more\"></span>\n\n<h2 id=\"The-installation-of-psutil\"><a href=\"#The-installation-of-psutil\" class=\"headerlink\" title=\"The installation of psutil\"></a>The installation of psutil</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install psutil</span><br></pre></td></tr></table></figure>\n<h2 id=\"Usefull-functions-in-psutil\"><a href=\"#Usefull-functions-in-psutil\" class=\"headerlink\" title=\"Usefull functions in psutil\"></a>Usefull functions in psutil</h2><h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psutil.cpu_count() <span class=\"comment\"># get the number of CPU</span></span><br><span class=\"line\">psutil.cpu_percent() <span class=\"comment\"># get the usage of all CPU</span></span><br><span class=\"line\">psutil.cpu_percent(percpu=<span class=\"literal\">True</span>) <span class=\"comment\"># get the usage of per CPU</span></span><br><span class=\"line\">psutil.cpu_percent(interval=<span class=\"number\">1</span>) <span class=\"comment\"># get the usage of all CPU in 1 second, using interval will get more robust result</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Memory\"><a href=\"#Memory\" class=\"headerlink\" title=\"Memory\"></a>Memory</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info = psutil.virtual_memory()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># total memory</span></span><br><span class=\"line\">info.total / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the usage of memory</span></span><br><span class=\"line\">info.percent</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"MacOS\"><a href=\"#MacOS\" class=\"headerlink\" title=\"MacOS\"></a>MacOS</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># svmem(total=25769803776, available=7726628864, percent=70.0, used=9045114880, free=791134208, active=6949453824, inactive=6915768320, wired=2095661056)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># will get more information like buffers, cached etc..</span></span><br><span class=\"line\"><span class=\"comment\"># svmem(total=33541988352, available=25899790336, percent=22.8, used=7087771648, free=2703233024, active=15287881728, inactive=14264188928, buffers=965103616, cached=22785880064, shared=8265728, slab=904495104)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"How-to-integrate-psutil-into-our-code\"><a href=\"#How-to-integrate-psutil-into-our-code\" class=\"headerlink\" title=\"How to integrate psutil into our code?\"></a>How to integrate psutil into our code?</h2><p>We can use psutil to monitor each function cpu and memory usage by using decorator.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> psutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">monitor</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        process = psutil.Process()</span><br><span class=\"line\">        cur_func_pid = process.pid</span><br><span class=\"line\">        process = psutil.Process(cur_func_pid)</span><br><span class=\"line\"></span><br><span class=\"line\">        func(*args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">        cpu_usage = process.cpu_percent(interval=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">        memory_usage = process.memory_info().rss / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> / <span class=\"number\">1024</span> <span class=\"comment\"># bytes -&gt; GB</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;CPU usage: <span class=\"subst\">&#123;cpu_usage&#125;</span>%&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Memory usage: <span class=\"subst\">&#123;memory_usage&#125;</span>GB&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@monitor</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">example_code</span>():</span><br><span class=\"line\">    <span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        np.random.rand(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">example_code()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/380842937\">Python常用库之psutil使用指南</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43391414/article/details/124431187\">简单介绍psutil库（virtual_memory()、cpu_percent()</a></li>\n<li><a href=\"https://www.askpython.com/python-modules/psutil-module\">Python System Monitoring and Profiling with the psutil Module</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/psutil-module-in-python/\">Psutil module in Python</a></li>\n<li><a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4py/2/mlpug/administrative-tasks-oracle-machine-learning-python1.html#GUID-0A8BF865-13EA-4A20-BAA9-7066066C45CB\">Administrative Tasks for Oracle Machine Learning for Python</a></li>\n</ul>\n","_path":"tutorial_psutil/","_link":"https://hsiangjenli.github.io/blog/tutorial_psutil/","_id":"cm6tyvzy8001vhxqe2x1ke2ug"}}